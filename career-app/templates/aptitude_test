{% extends "base.html" %}
{% block title %}Aptitude Test{% endblock %}

{% block content %}
<div class="assessment-container">
    <!-- Instructions -->
    <div class="instructions">
        <h3>Instructions</h3>
        <p><strong>Time Limit:</strong> {{ instructions.time_limit }}</p>
        <p><strong>Honesty:</strong> {{ instructions.honesty }}</p>
        <p><strong>Scientific Accuracy:</strong> {{ instructions.scientific_accuracy }}</p>
    </div>

    <style>
        .assessment-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background: #f4f1e1;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        
        .question-card {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        
        .question-card p {
            font-size: 1.2rem;
            color: #2e3c56;
            margin-bottom: 10px;
        }
        
        input[type="radio"] {
            margin-right: 10px;
        }
        
        .submit-btn {
            font-size: 1.2rem;
            padding: 12px 30px;
            background: #4a78b8;
            color: #fff;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .submit-btn:hover {
            background: #5b8fce;
        }
        
        .instructions {
            background: #e9ecef;
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 5px;
        }
    </style>

    <form method="POST" action="{{ url_for('submit_test', test_type='aptitude') }}" id="aptitude-form">
        {% for question in questions %}
            <div class="question-card" data-difficulty="{{ loop.index0 % 3 | string | replace('0', 'easy') | replace('1', 'moderate') | replace('2', 'hard') }}" data-category="{{ loop.index % 3 | string | replace('0', 'Mathematics') | replace('1', 'Logical Reasoning') | replace('2', 'Verbal Ability') }}">
                <p>{{ question.text | safe }}</p>
                {% set options = question.options %}
                {% for idx, option in enumerate(options) %}
                    <label>
                        <input type="radio" name="answer_{{ loop.index0 }}" value="{{ idx }}" required>
                        {{ option | safe }}
                    </label><br>
                {% endfor %}
            </div>
        {% endfor %}
        <button type="submit" class="submit-btn">Submit Test</button>
    </form>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const form = document.getElementById('aptitude-form');
            let startTime = Date.now();
            let timeLimit = 600; // 10 minutes in seconds

            // Timer
            const timer = setInterval(() => {
                const elapsed = Math.floor((Date.now() - startTime) / 1000);
                const remaining = timeLimit - elapsed;
                if (remaining <= 0) {
                    clearInterval(timer);
                    form.submit();
                }
            }, 1000);

            // Validation and Adaptive Logic
            form.addEventListener('submit', (e) => {
                let allAnswered = true;
                document.querySelectorAll('.question-card').forEach(card => {
                    const selected = card.querySelector('input[type="radio"]:checked');
                    if (!selected) {
                        allAnswered = false;
                    }
                });
                if (!allAnswered) {
                    e.preventDefault();
                    alert('Please answer all questions before submitting.');
                    return;
                }

                // Adaptive logic: Check for correct answers to adjust difficulty
                let currentAbility = 0;
                document.querySelectorAll('.question-card').forEach(card => {
                    const selected = card.querySelector('input[type="radio"]:checked');
                    const correctIdx = card.querySelectorAll('input[type="radio]')[parseInt(card.dataset.correct)];
                    if (selected && selected.value == correctIdx) {
                        currentAbility += 0.3; // Increase ability for correct answer
                    } else {
                        currentAbility -= 0.2; // Decrease for wrong answer
                    }
                });

                // Simple adaptive suggestion (for future enhancement)
                console.log(`Estimated Ability: ${currentAbility}`);
            });
        });
    </script>
</div>
{% endblock %}