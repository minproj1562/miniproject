{% extends "base.html" %}

{% block content %}
<div class="assessment-container">
    <!-- Progress Bar -->
    <div class="progress-container">
        <div class="progress-bar" style="width: {{ (current_question_index / questions|length) * 100 }}%"></div>
    </div>

    <!-- Question Card -->
    <div class="question-card">
        <h2 class="question-text">{{ question.text }}</h2>
        
        <!-- Likert Scale Options -->
        <div class="options-grid">
            {% for option in question.likert_scale %}
            <div class="option-card" 
                 data-question-id="{{ question.id }}"
                 data-option-value="{{ loop.index0 }}">
                <span class="option-text">{{ option }}</span>
                {% if question.direction == False %}
                <div class="direction-indicator">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                        <path fill="currentColor" d="M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z"/>
                    </svg>
                </div>
                {% endif %}
            </div>
            {% endfor %}
        </div>
    </div>

    <!-- Navigation Controls -->
    <div class="assessment-controls">
        {% if current_question_index > 0 %}
        <button class="nav-btn prev-btn" onclick="navigate(-1)">
            Previous
        </button>
        {% endif %}
        
        {% if current_question_index < questions|length - 1 %}
        <button class="nav-btn next-btn" onclick="navigate(1)">
            Next
        </button>
        {% else %}
        <button class="submit-btn" onclick="submitAssessment()">
            Complete Assessment
        </button>
        {% endif %}
    </div>

    <!-- Timer -->
    <div class="timer-alert" id="timer">
        <i class="bi bi-clock"></i>
        Time Spent: <span id="time-display">00:00</span>
    </div>
</div>

<script>
let responses = {};
let startTime = Date.now();

document.querySelectorAll('.option-card').forEach(card => {
    card.addEventListener('click', function() {
        const questionId = this.dataset.questionId;
        const value = parseInt(this.dataset.optionValue);
        
        // Clear previous selection for this question
        document.querySelectorAll(`[data-question-id="${questionId}"]`)
            .forEach(opt => opt.classList.remove('selected'));
        
        // Store response and visual feedback
        this.classList.add('selected');
        responses[questionId] = value;
    });
});

function navigate(direction) {
    const newIndex = {{ current_question_index }} + direction;
    window.location.href = `{{ url_for('personality_test') }}?q=${newIndex}`;
}

function submitAssessment() {
    fetch("{{ url_for('submit_assessment') }}", {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            type: 'personality',
            responses: responses,
            duration: Math.floor((Date.now() - startTime) / 1000)
        })
    }).then(response => {
        if (response.ok) window.location = "{{ url_for('career_test_results') }}";
    });
}

// Update timer every second
setInterval(() => {
    const elapsed = Math.floor((Date.now() - startTime) / 1000);
    const minutes = Math.floor(elapsed / 60).toString().padStart(2, '0');
    const seconds = (elapsed % 60).toString().padStart(2, '0');
    document.getElementById('time-display').textContent = `${minutes}:${seconds}`;
}, 1000);
</script>

<style>
.direction-indicator {
    margin-top: 0.5rem;
    color: var(--accent);
    opacity: 0.8;
}

.option-card.selected {
    border-color: var(--primary);
    background: linear-gradient(
        45deg, 
        rgba(37, 99, 235, 0.05) 0%,
        rgba(245, 158, 11, 0.02) 100%
    );
    box-shadow: var(--shadow-md);
}

.nav-btn {
    padding: 0.8rem 1.5rem;
    border-radius: 1rem;
    border: 2px solid var(--primary);
    background: white;
    color: var(--primary);
    font-weight: 600;
    transition: all 0.3s ease;
}

.nav-btn:hover {
    background: var(--primary);
    color: white;
    transform: translateY(-2px);
}
</style>
{% endblock %}