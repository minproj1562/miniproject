{% extends "base.html" %}
{% block title %}Aptitude Test{% endblock %}

{% block content %}
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            color: #fff;
            margin: 0;
            padding: 0;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        .assessment-container {
            max-width: 900px;
            margin: 4rem auto;
            padding: 2rem;
        }
        .progress-container {
            background: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            height: 20px;
            margin-bottom: 1.5rem;
        }
        .progress-bar {
            background: #2a5298;
            height: 100%;
            border-radius: 10px;
            transition: width 0.3s ease;
        }
        .timer-alert {
            text-align: center;
            font-size: 1.2rem;
            margin-bottom: 1rem;
            color: #fff;
        }
        .question-counter {
            text-align: center;
            font-size: 1.1rem;
            margin-bottom: 2rem;
            color: #fff;
        }
        .question-card {
            background: #fff;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease;
        }
        .question-card:hover {
            transform: translateY(-5px);
        }
        .question-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
        }
        .category-badge {
            background: #2a5298;
            color: #fff;
            padding: 0.3rem 0.8rem;
            border-radius: 10px;
        }
        .time-limit {
            background: #dc3545;
            color: #fff;
            padding: 0.3rem 0.8rem;
            border-radius: 10px;
        }
        .question-text {
            font-size: 1.2rem;
            color: #333;
            margin-bottom: 1rem;
        }
        .options-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }
        .form-check-input {
            margin-right: 0.5rem;
        }
        .form-check-label {
            font-size: 1rem;
            color: #333;
        }
        .assessment-controls {
            display: flex;
            justify-content: space-between;
            margin-top: 2rem;
        }
        .nav-btn, .submit-btn {
            padding: 0.75rem 1.5rem;
            font-size: 1.1rem;
            border-radius: 20px;
            border: none;
            background: #2a5298;
            color: #fff;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .nav-btn:hover, .submit-btn:hover {
            background: #1e3c72;
            transform: translateY(-3px);
        }
    </style>

    <div class="assessment-container">
        <div class="progress-container">
            <div class="progress-bar" id="progress-bar" style="width: 0%"></div>
        </div>

        <div class="timer-alert" id="timer">
            <i class="bi bi-clock"></i>
            Time Left: <span id="time-left">{{ initial_time }}</span>
        </div>

        <div class="question-counter" id="question-counter">
            Questions Answered: <span id="answered-count">0</span> / {{ total_questions }}
        </div>

        <form id="aptitude-form" method="POST" action=""> <!-- Changed action to empty string -->
            <input type="hidden" name="csrf_token" value="{{ csrf_token }}">
            <input type="hidden" name="time_spent" id="time-spent" value="0">

            <div class="questions-wrapper">
                {% for question in questions %}
                <div class="question-card">
                    <div class="question-header">
                        <span class="category-badge">{{ question.type }}</span>
                        <span class="time-limit">‚è± {{ question.time_limit }}s</span>
                    </div>
                    
                    <h3 class="question-text">{{ question.text }}</h3>
                    
                    <div class="options-grid">
                        {% for option in question.options %}
                        <div class="form-check">
                            <input class="form-check-input" type="radio" 
                                   name="{{ question.id }}" 
                                   value="{{ loop.index0 }}" 
                                   id="{{ question.id }}-{{ loop.index0 }}"
                                   data-correct="{% if loop.index0 == question.correct %}true{% else %}false{% endif %}" 
                                   required>
                            <label class="form-check-label" for="{{ question.id }}-{{ loop.index0 }}">
                                {{ option }}
                            </label>
                        </div>
                        {% endfor %}
                    </div>
                </div>
                {% endfor %}
            </div>

            <div class="assessment-controls">
                <button type="submit" class="submit-btn">Submit Assessment</button>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const timerElement = document.getElementById('time-left');
            const answeredCountElement = document.getElementById('answered-count');
            const progressBar = document.getElementById('progress-bar');
            const form = document.getElementById('aptitude-form');
            const timeSpentInput = document.getElementById('time-spent');
            let timeLeft = {{ initial_time|default(600) }};
            let answeredCount = {{ completed_questions|default(0) }};
            const totalQuestions = {{ total_questions|default(0) }};

            if (totalQuestions > 0 && timerElement && answeredCountElement && progressBar && form) {
                const timerInterval = setInterval(() => {
                    timeLeft--;
                    const minutes = Math.floor(timeLeft / 60);
                    const seconds = timeLeft % 60;
                    timerElement.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;
                    if (timeLeft <= 0) {
                        clearInterval(timerInterval);
                        form.submit();
                    }
                }, 1000);

                document.querySelectorAll('.form-check-input').forEach(input => {
                    input.addEventListener('change', function() {
                        const questionCard = this.closest('.question-card');
                        const isCorrect = this.getAttribute('data-correct') === 'true';
                        const questionId = this.name;

                        // Update answered count only if it's the first answer for this question
                        const alreadyAnswered = document.querySelectorAll(`input[name="${questionId}"]:checked`).length > 1;
                        if (!alreadyAnswered) {
                            answeredCount++;
                            answeredCountElement.textContent = answeredCount;
                            progressBar.style.width = `${(answeredCount / totalQuestions) * 100}%`;
                        }
                    });
                });

                form.addEventListener('submit', (e) => {
                    timeSpentInput.value = {{ initial_time|default(600) }} - timeLeft;
                });
            }
        });
    </script>
{% endblock %}